<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MessageDAO">

<!-- 메세지 리스트 가져오기 -->
<select id="message_list" parameterType="com.ggul.zip.message.MessageTO" resultType="com.ggul.zip.message.MessageTO">
    select 		m.MESSAGE_NUM, 
    			m.MESSAGE_ROOM, 
    			m.MESSAGE_SEND_ID, 
    			m.MESSAGE_RECV_ID, 
    			date_format(m.MESSAGE_SEND_TIME, '%Y-%m-%d %H:%i') AS MESSAGE_SEND_TIME, 
    			m.MESSAGE_READ_TIME, 
    			ifnull(m.MESSAGE_CONT,'') AS MESSAGE_CONT, 
    			m.MESSAGE_READ_CHK,
    			(SELECT u.user_role FROM USERS u WHERE u.user_id = #{user_id}) AS USER_ROLE
    from 		message m
    left outer join users u
    ON m.MESSAGE_SEND_ID = u.USER_ID
    where 		1 = 1 and
    <choose>
        <when test="send_btn == 1">
        		MESSAGE_NUM in
	        		(select 	max(MESSAGE_NUM)
	        		from 		message
	        		group by 	MESSAGE_ROOM) and (MESSAGE_SEND_ID = #{user_id} or MESSAGE_RECV_ID = #{user_id})
    			order by 	FIELD(MESSAGE_ROOM, #{message_room}, 0, 0) desc;
        </when>
        <otherwise>
		        MESSAGE_NUM in
		        	(select 	max(MESSAGE_NUM)
	       			from 		message
        			group by 	MESSAGE_ROOM) and (MESSAGE_SEND_ID = #{user_id} or MESSAGE_RECV_ID = #{user_id})
	    		order by 	MESSAGE_NUM desc;
        </otherwise>
    </choose>
</select>


<!-- 메세지 list에서 상대방 profile 가져오기 -->
<select id="get_other_profile" parameterType="com.ggul.zip.message.MessageTO" resultType="String">
    select		if(count(*) > 0,
				tiper_img,
				'default.png') as tiper_img
	from 		tiper
	
    <choose>
        <when test="message_send_id == user_id">
            where 	TIPER_USER_ID = #{message_recv_id}
        </when>
        <otherwise>
            where 	TIPER_USER_ID = #{message_send_id}
        </otherwise>
    </choose>
</select>


<!-- 안읽은 메세지 갯수 가져오기 -->
<select id="count_unread" parameterType="com.ggul.zip.message.MessageTO" resultType="Int">
    select 		count(MESSAGE_NUM) 
   	from 		message 
    where 		MESSAGE_RECV_ID = #{user_id} and MESSAGE_READ_CHK = 0 and MESSAGE_ROOM = #{message_room} and MESSAGE_CONT is not null
</select>


<!-- 메인에서 안읽은 메세지 있는지 확인하기 -->
<select id="main_count_unread" parameterType="com.ggul.zip.message.MessageTO" resultType="Int">
    select 		count(MESSAGE_NUM) 
   	from 		message 
    where 		MESSAGE_RECV_ID = #{user_id} and MESSAGE_READ_CHK = 0 and MESSAGE_CONT is not null
</select>


<!-- 메세지 내용 가져오기 -->
<select id="room_content_list" parameterType="com.ggul.zip.message.MessageTO" resultType="com.ggul.zip.message.MessageTO">
    select		m.MESSAGE_NUM,
    			m.MESSAGE_ROOM,
    			m.MESSAGE_SEND_ID,
    			m.MESSAGE_RECV_ID,
    			date_format(m.MESSAGE_SEND_TIME, '%Y-%m-%d %H:%i') MESSAGE_SEND_TIME,
    			m.MESSAGE_READ_TIME,
    			m.MESSAGE_CONT,
    			m.MESSAGE_READ_CHK,
    			ifnull(t.tiper_img,'default.png') AS tiper_img
    from 		message m
    left outer join users u
    	on m.MESSAGE_SEND_ID = u.USER_ID
    left outer join tiper t
   		on m.MESSAGE_SEND_ID = t.TIPER_USER_ID
    <choose>
        <when test="message_room != 0">
            where 	MESSAGE_ROOM = #{message_room} and MESSAGE_CONT is not null
        </when>
        <otherwise>
            where 	(MESSAGE_RECV_ID = #{message_recv_id} and MESSAGE_SEND_ID = #{user_id} and MESSAGE_CONT is not null) or
            		(MESSAGE_SEND_ID = #{message_recv_id} and MESSAGE_RECV_ID = #{user_id} and MESSAGE_CONT is not null)
        </otherwise>
    </choose>
	ORDER BY 	message_num
</select>


<!-- 메세지 읽음 처리 -->
<update id="message_read_chk" parameterType="com.ggul.zip.message.MessageTO">
    update message set MESSAGE_READ_CHK = 1
    <choose>
        <when test="message_room != 0">
            where 	MESSAGE_ROOM = #{message_room} and MESSAGE_READ_CHK = 0 and MESSAGE_RECV_ID = #{user_id}
        </when>
        <otherwise>
            where 	MESSAGE_SEND_ID = #{message_recv_id} and MESSAGE_READ_CHK = 0 and MESSAGE_RECV_ID = #{user_id}
        </otherwise>
    </choose>
</update>


<!-- 메세지리스트에서 메세지 보내기 -->
<insert id="messageSendInlist" parameterType="com.ggul.zip.message.MessageTO">
    insert into message values(0, #{message_room}, #{message_send_id}, #{message_recv_id}, now(), now(), #{message_cont}, 0);
</insert>


<!-- room 번호 최댓값 구하기 -->
<select id="max_room"  parameterType="com.ggul.zip.message.MessageTO" resultType="Int">
     SELECT IFNULL(max(MESSAGE_ROOM),0) from message
</select>


<!-- 메세지 이력이 있는지 검색 -->
<select id="exist_chat" parameterType="com.ggul.zip.message.MessageTO" resultType="Int">
    select 	count(MESSAGE_NUM)
    from 	message 
    where	(MESSAGE_RECV_ID = #{message_recv_id} and MESSAGE_SEND_ID = #{message_send_id}) or
			(MESSAGE_SEND_ID = #{message_recv_id} and MESSAGE_RECV_ID = #{message_send_id})
</select>


<!-- 기존 메세지 내역의 room 번호를 가져옴 -->
<select id="select_room"  parameterType="com.ggul.zip.message.MessageTO" resultType="String">
    select 	MESSAGE_ROOM
    from 	message
    where 	(MESSAGE_RECV_ID = #{message_recv_id} and MESSAGE_SEND_ID = #{message_send_id}) or
    		(MESSAGE_SEND_ID = #{message_recv_id} and MESSAGE_RECV_ID = #{message_send_id})
    limit 	0,1
</select>
	
</mapper>
