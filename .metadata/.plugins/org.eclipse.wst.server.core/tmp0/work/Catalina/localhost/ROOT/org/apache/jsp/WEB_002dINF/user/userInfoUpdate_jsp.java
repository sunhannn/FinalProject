/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-09 10:19:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ggul.zip.user.UserVO;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public final class userInfoUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.security.MessageDigest");
    _jspx_imports_classes.add("java.security.NoSuchAlgorithmException");
    _jspx_imports_classes.add("com.ggul.zip.user.UserVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

//UserVO 객체 받아오기
UserVO vo = (UserVO) request.getAttribute("userVO");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>회원정보 수정 및 조회");
      out.print(vo.getUser_cate());
      out.write("</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"front/common.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"front/bootstrap.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@media ( max-width : 768px) {\r\n");
      out.write("	#userup_sub1 {\r\n");
      out.write("		font-size: 30px;\r\n");
      out.write("		text-decoration-line: underline;\r\n");
      out.write("		text-decoration-color: #FFD400;\r\n");
      out.write("	}\r\n");
      out.write("	#userup_tab1 {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_tr {\r\n");
      out.write("		height: 100px;\r\n");
      out.write("	}\r\n");
      out.write("	#userup_tr5 {\r\n");
      out.write("		height: 160px;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_input:focus {\r\n");
      out.write("		border: 3px solid #FFD400;\r\n");
      out.write("		outline: none;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_input {\r\n");
      out.write("		width: 220px;\r\n");
      out.write("		border: 0;\r\n");
      out.write("	}\r\n");
      out.write("	#userup_td1, #userup_td3, #userup_td5, #userup_td7, #userup_td9,\r\n");
      out.write("		#userup_td11, #userup_td13 {\r\n");
      out.write("		width: 150px;\r\n");
      out.write("	}\r\n");
      out.write("	.tab_span {\r\n");
      out.write("		font-size: 20px;\r\n");
      out.write("		text-decoration-line: underline;\r\n");
      out.write("		text-decoration-color: #FFD400;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_addr {\r\n");
      out.write("		background-color: #FFD400;\r\n");
      out.write("		border: 0;\r\n");
      out.write("		width: 100px;\r\n");
      out.write("		height: 40px;\r\n");
      out.write("		border-radius: 10%;\r\n");
      out.write("		color: white;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_btn {\r\n");
      out.write("		background-color: #FFD400;\r\n");
      out.write("		border: 0;\r\n");
      out.write("		width: 100px;\r\n");
      out.write("		height: 40px;\r\n");
      out.write("		border-radius: 10%;\r\n");
      out.write("		color: white;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media ( min-width : 769px) {\r\n");
      out.write("	#userup_sub1 {\r\n");
      out.write("		font-size: 30px;\r\n");
      out.write("		text-decoration-line: underline;\r\n");
      out.write("		text-decoration-color: #FFD400;\r\n");
      out.write("	}\r\n");
      out.write("	#userup_tab1 {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_tr {\r\n");
      out.write("		height: 100px;\r\n");
      out.write("	}\r\n");
      out.write("	#userup_tr5 {\r\n");
      out.write("		height: 160px;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_input:focus {\r\n");
      out.write("		border: 3px solid #FFD400;\r\n");
      out.write("		outline: none;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_input {\r\n");
      out.write("		width: 220px;\r\n");
      out.write("		border: 0;\r\n");
      out.write("		height: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	#userup_td1, #userup_td3, #userup_td5, #userup_td7, #userup_td9,\r\n");
      out.write("		#userup_td11, #userup_td13 {\r\n");
      out.write("		width: 150px;\r\n");
      out.write("	}\r\n");
      out.write("	.tab_span {\r\n");
      out.write("		font-size: 20px;\r\n");
      out.write("		text-decoration-line: underline;\r\n");
      out.write("		text-decoration-color: #FFD400;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_addr {\r\n");
      out.write("		background-color: #FFD400;\r\n");
      out.write("		border: 0;\r\n");
      out.write("		width: 100px;\r\n");
      out.write("		height: 40px;\r\n");
      out.write("		border-radius: 10%;\r\n");
      out.write("		color: white;\r\n");
      out.write("	}\r\n");
      out.write("	.userup_btn {\r\n");
      out.write("		background-color: #FFD400;\r\n");
      out.write("		border: 0;\r\n");
      out.write("		width: 100px;\r\n");
      out.write("		height: 40px;\r\n");
      out.write("		border-radius: 10%;\r\n");
      out.write("		color: white;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<span id=\"userup_sub1\">회원정보 수정 및 조회</span>\r\n");
      out.write("		<hr>\r\n");
      out.write("	</div>\r\n");
      out.write("	<br>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form action=\"userUpdateAction\">\r\n");
      out.write("			<table id=\"userup_tab1\">\r\n");
      out.write("				<tr class=\"userup_tr\" id=\"userup_tr1\">\r\n");
      out.write("					<td id=\"userup_td1\"><span class=\"tab_span\">아이디</span></td>\r\n");
      out.write("					<td id=\"userup_td2\"><input type=\"text\" readonly=\"readonly\"\r\n");
      out.write("						placeholder=\"");
      out.print(vo.getUser_id());
      out.write("\" class=\"userup_input\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"userup_tr\" id=\"userup_tr2\">\r\n");
      out.write("					<td id=\"userup_td3\"><span class=\"tab_span\">이름</span></td>\r\n");
      out.write("					<td id=\"userup_td4\"><input type=\"text\" readonly=\"readonly\"\r\n");
      out.write("						placeholder=\"");
      out.print(vo.getUser_name());
      out.write("\" class=\"userup_input\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"userup_tr\" id=\"userup_tr3\">\r\n");
      out.write("					<td id=\"userup_td5\"><span class=\"tab_span\">비밀번호</span></td>\r\n");
      out.write("					<td id=\"userup_td6\"><input type=\"password\" name=\"user_pw\"\r\n");
      out.write("						placeholder=\"영문 숫자 조합으로 최대 8자\" class=\"userup_input\">\r\n");
      out.write("						<div class=\"invalid-feedback\">비밀번호가 일치하지 않습니다.</div></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"userup_tr\" id=\"userup_tr4\">\r\n");
      out.write("					<td id=\"userup_td7\"><span class=\"tab_span\">비밀번호 확인</span></td>\r\n");
      out.write("					<td id=\"userup_td8\"><input type=\"password\"\r\n");
      out.write("						placeholder=\"비밀번호를 재입력해주세요\" class=\"userup_input\">\r\n");
      out.write("						<div class=\"invalid-feedback\">비밀번호가 일치하지 않습니다.</div></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"userup_tr\" id=\"userup_tr5\">\r\n");
      out.write("					<td id=\"userup_td9\"><span class=\"tab_span\">주소</span></td>\r\n");
      out.write("					<td id=\"userup_td10\"><input type=\"text\" id=\"sample4_postcode\"\r\n");
      out.write("						placeholder=\"");
      out.print(vo.getUser_addr1());
      out.write("\" name=\"user_addr1\"\r\n");
      out.write("						class=\"userup_input\"> <input type=\"button\"\r\n");
      out.write("						onclick=\"sample4_execDaumPostcode()\" value=\"주소 변경\" name=\"M_ADDR\"\r\n");
      out.write("						class=\"userup_addr\"><br> <input type=\"text\"\r\n");
      out.write("						id=\"sample4_roadAddress\" placeholder=\"");
      out.print(vo.getUser_addr2());
      out.write("\"\r\n");
      out.write("						name=\"user_addr2\" class=\"userup_input\"> <input type=\"text\"\r\n");
      out.write("						id=\"sample4_jibunAddress\" placeholder=\"");
      out.print(vo.getUser_addr3());
      out.write("\"\r\n");
      out.write("						name=\"user_addr3\" class=\"userup_input\"> <span id=\"guide\"\r\n");
      out.write("						style=\"color: #999; display: none\"></span> <input type=\"text\"\r\n");
      out.write("						id=\"sample4_detailAddress\" placeholder=\"");
      out.print(vo.getUser_addr4());
      out.write("\"\r\n");
      out.write("						name=\"user_addr4\" class=\"userup_input\"> <input type=\"text\"\r\n");
      out.write("						id=\"sample4_extraAddress\" placeholder=\"참고항목\" class=\"userup_input\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"userup_tr\" class=\"userup_td\" id=\"userup_tr6\">\r\n");
      out.write("					<td id=\"userup_td11\"><span class=\"tab_span\">핸드폰번호</span></td>\r\n");
      out.write("					<td id=\"userup_td12\"><input type=\"text\"\r\n");
      out.write("						placeholder=\"");
      out.print(vo.getUser_tel());
      out.write("\" readonly=\"readonly\"\r\n");
      out.write("						class=\"userup_input\">\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"userup_tr\" id=\"userup_tr7\">\r\n");
      out.write("					<td class=\"userup_td\" id=\"userup_td13\"><span class=\"tab_span\">이메일</span></td>\r\n");
      out.write("					<td class=\"userup_td\" id=\"userup_td14\"><input type=\"text\"\r\n");
      out.write("						name=\"user_email\" placeholder=\"");
      out.print(vo.getUser_email());
      out.write("\"\r\n");
      out.write("						readonly=\"readonly\" class=\"userup_input\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><span>관심 카테고리</span></td>\r\n");
      out.write("					<td><select id=\"userup_cate1\" name=\"user_cate\">\r\n");
      out.write("							<option selected value=\"");
      out.print(vo.getUser_cate());
      out.write("\">변경안함</option>\r\n");
      out.write("							<option value=\"예체능\">예체능</option>\r\n");
      out.write("							<option value=\"공예\">공예</option>\r\n");
      out.write("							<option value=\"사무\">사무</option>\r\n");
      out.write("							<option value=\"라이프스타일\">라이프스타일</option>\r\n");
      out.write("							<option value=\"IT\">IT</option>\r\n");
      out.write("							<option value=\"기타\">기타</option>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					</select></td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			<br>\r\n");
      out.write("			<button type=\"submit\" class=\"userup_btn\">수정완료</button>\r\n");
      out.write("			<button type=\"button\" onclick=\"location.href='userDeleteAction'\"\r\n");
      out.write("				class=\"userup_btn\">회원탈퇴</button>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		//본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.\r\n");
      out.write("		function sample4_execDaumPostcode() {\r\n");
      out.write("			new daum.Postcode(\r\n");
      out.write("					{\r\n");
      out.write("						oncomplete : function(data) {\r\n");
      out.write("							// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("							// 도로명 주소의 노출 규칙에 따라 주소를 표시한다.\r\n");
      out.write("							// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("							var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("							var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("							// 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("							// 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("							if (data.bname !== ''\r\n");
      out.write("									&& /[동|로|가]$/g.test(data.bname)) {\r\n");
      out.write("								extraRoadAddr += data.bname;\r\n");
      out.write("							}\r\n");
      out.write("							// 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("							if (data.buildingName !== ''\r\n");
      out.write("									&& data.apartment === 'Y') {\r\n");
      out.write("								extraRoadAddr += (extraRoadAddr !== '' ? ', '\r\n");
      out.write("										+ data.buildingName : data.buildingName);\r\n");
      out.write("							}\r\n");
      out.write("							// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("							if (extraRoadAddr !== '') {\r\n");
      out.write("								extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("							}\r\n");
      out.write("							// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("							document.getElementById('sample4_postcode').value = data.zonecode;\r\n");
      out.write("							document.getElementById(\"sample4_roadAddress\").value = roadAddr;\r\n");
      out.write("							document.getElementById(\"sample4_jibunAddress\").value = data.jibunAddress;\r\n");
      out.write("\r\n");
      out.write("							// 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("							if (roadAddr !== '') {\r\n");
      out.write("								document.getElementById(\"sample4_extraAddress\").value = extraRoadAddr;\r\n");
      out.write("							} else {\r\n");
      out.write("								document.getElementById(\"sample4_extraAddress\").value = '';\r\n");
      out.write("							}\r\n");
      out.write("							var guideTextBox = document.getElementById(\"guide\");\r\n");
      out.write("							// 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.\r\n");
      out.write("							if (data.autoRoadAddress) {\r\n");
      out.write("								var expRoadAddr = data.autoRoadAddress\r\n");
      out.write("										+ extraRoadAddr;\r\n");
      out.write("								guideTextBox.innerHTML = '(예상 도로명 주소 : '\r\n");
      out.write("										+ expRoadAddr + ')';\r\n");
      out.write("								guideTextBox.style.display = 'block';\r\n");
      out.write("							} else if (data.autoJibunAddress) {\r\n");
      out.write("								var expJibunAddr = data.autoJibunAddress;\r\n");
      out.write("								guideTextBox.innerHTML = '(예상 지번 주소 : '\r\n");
      out.write("										+ expJibunAddr + ')';\r\n");
      out.write("								guideTextBox.style.display = 'block';\r\n");
      out.write("							} else {\r\n");
      out.write("								guideTextBox.innerHTML = '';\r\n");
      out.write("								guideTextBox.style.display = 'none';\r\n");
      out.write("							}\r\n");
      out.write("						}\r\n");
      out.write("					}).open();\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		//비밀번호 매칭\r\n");
      out.write("		function checkMatch(p, pre, passre) {\r\n");
      out.write("			let pval = p;\r\n");
      out.write("			console.log(pval);\r\n");
      out.write("			let pvalre = pre;\r\n");
      out.write("			console.log(pvalre);\r\n");
      out.write("			let res = true;\r\n");
      out.write("			if (pval != pvalre) {\r\n");
      out.write("				passre.nextAll(\"div.invalid-feedback\").text(\"비밀번호가 일치하지 않습니다.\")\r\n");
      out.write("						.show();\r\n");
      out.write("				passre.nextAll(\"div.valid-feedback\").hide();\r\n");
      out.write("				res = false;\r\n");
      out.write("			} else {\r\n");
      out.write("				passre.nextAll(\"div.valid-feedback\").text(\"비밀번호가 일치합니다.\")\r\n");
      out.write("						.show();\r\n");
      out.write("				passre.nextAll(\"div.invalid-feedback\").hide();\r\n");
      out.write("			}\r\n");
      out.write("			return res;\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
