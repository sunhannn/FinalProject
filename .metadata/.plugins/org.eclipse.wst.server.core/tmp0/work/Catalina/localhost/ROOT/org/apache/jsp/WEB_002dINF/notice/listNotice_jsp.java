/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-10 06:13:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ggul.zip.notice.NoticeVO;
import java.util.*;

public final class listNotice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1682297696099L));
    _jspx_dependants.put("jar:file:/C:/Springwork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/honeytiper999/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.ggul.zip.notice.NoticeVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>부트스트랩 이용했음</title>\r\n");
      out.write("        <link rel=\"shortcut icon\" href=\"data:image/x-icon\" type=\"image/x-icon\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/bootstrap.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/notice.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("    ");

    if(request.getParameter("suc")!=null){
    	out.print("<script>");
    	out.print("alert('수정이 완료되었습니다.');");
    	out.print("</script>");
    }
    
    if(request.getParameter("del")!=null){
    	out.print("<script>");
    	out.print("alert('삭제가 완료되었습니다.');");
    	out.print("</script>");
    }
    
      out.write("\r\n");
      out.write("<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.2/jquery.min.js\"></script> -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/jquery.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("<style>\r\n");
      out.write("#btnSearch{\r\n");
      out.write("	border:0;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	background-color: #FFD400;\r\n");
      out.write("	font-size: 14pt; \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    border-right: 0;\r\n");
      out.write("	padding-left :0;\r\n");
      out.write("}\r\n");
      out.write("ul li {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    float: left;\r\n");
      out.write("	list-style:none;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li a {\r\n");
      out.write("    display: block;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("	color: black;\r\n");
      out.write("    padding: 9px 12px;\r\n");
      out.write("    border-right: solid 1px #ccc;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("	text-decoration-line:none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li.on {\r\n");
      out.write("    background: #eda712;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li.on a {\r\n");
      out.write("    color: #fff;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function addNotice(){\r\n");
      out.write("	location.href = \"insertMovenotice\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function selTr(val){\r\n");
      out.write("	location.href=\"getnotice?notice_num=\"+val;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function btnSFnc(){\r\n");
      out.write("		ajaxFnc(); \r\n");
      out.write("}\r\n");
      out.write("    \r\n");
      out.write("var totalData; //총 데이터 수\r\n");
      out.write("var dataPerPage= 15; //한 페이지에 나타낼 글 수\r\n");
      out.write("var pageCount = 5; //페이징에 나타낼 페이지 수\r\n");
      out.write("var globalCurrentPage= 1; //현재 페이지\r\n");
      out.write("    \r\n");
      out.write("function ajaxFnc(){\r\n");
      out.write("	\r\n");
      out.write(" 	var condition = document.getElementById('selCondition').value;\r\n");
      out.write(" 	var search = $('#iptSearch').val();\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({ // ajax로 데이터 가져오기\r\n");
      out.write("		method: \"POST\",\r\n");
      out.write("		url : 'listnotice',\r\n");
      out.write("		data:{'notice_search':search,'notice_condition':condition},\r\n");
      out.write("		cache:false,\r\n");
      out.write("		success: function (res) {\r\n");
      out.write("		    totalData = res.length;\r\n");
      out.write("		 	//글 목록 표시 재호출\r\n");
      out.write("			displayData(globalCurrentPage, dataPerPage, res);\r\n");
      out.write("			//페이징 표시 재호출\r\n");
      out.write("			paging(totalData, dataPerPage, pageCount, globalCurrentPage);\r\n");
      out.write("		}\r\n");
      out.write("	 });		\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("	ajaxFnc();\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	frm.addEventListener('submit', e =>{\r\n");
      out.write("	 e.preventDefault();\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("    \r\n");
      out.write("//현재 페이지(currentPage)와 페이지당 글 개수(dataPerPage) 반영\r\n");
      out.write("function displayData(currentPage, dataPerPage, dataList) {\r\n");
      out.write("	console.log('currentPage', currentPage);\r\n");
      out.write("	console.log('dataPerPage', dataPerPage);\r\n");
      out.write("	console.log('dataList', dataList);\r\n");
      out.write("	console.log('dataList.length', dataList.length);\r\n");
      out.write("	\r\n");
      out.write("	let chartHtml = \"\";	\r\n");
      out.write("	\r\n");
      out.write("	//Number로 변환하지 않으면 아래에서 +를 할 경우 스트링 결합이 되어버림.. \r\n");
      out.write("	currentPage = Number(currentPage);\r\n");
      out.write("	dataPerPage = Number(dataPerPage);\r\n");
      out.write("	let startPage = (currentPage - 1) * dataPerPage; //15\r\n");
      out.write("	let endPage = (currentPage - 1) * dataPerPage + dataPerPage;\r\n");
      out.write("	if(endPage > (dataList.length)) endPage = dataList.length;\r\n");
      out.write("	\r\n");
      out.write("	 for (var i = startPage ;i < endPage; i++){\r\n");
      out.write("		 chartHtml += \"<tr onclick='selTr(\"+dataList[i].notice_num +\")' style='cursor: pointer'><td>\" + dataList[i].notice_num + \"</td><td>\" + dataList[i].notice_title + \"</td><td>\"+dataList[i].notice_date+\"</tr>\";\r\n");
      out.write("	 }\r\n");
      out.write("	 \r\n");
      out.write("	$(\"#dataTableBody\").html(chartHtml);\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("function paging(totalData, dataPerPage, pageCount, currentPage) {\r\n");
      out.write("	totalPage = Math.ceil(totalData / dataPerPage); //총 페이지 수\r\n");
      out.write("	 \r\n");
      out.write("	if(totalPage<pageCount){\r\n");
      out.write("	  pageCount=totalPage;\r\n");
      out.write("	}\r\n");
      out.write("	 \r\n");
      out.write("	let pageGroup = Math.ceil(currentPage / pageCount); // 페이지 그룹\r\n");
      out.write("	let endPage = pageGroup * pageCount; //화면에 보여질 마지막 페이지 번호\r\n");
      out.write("	\r\n");
      out.write("	if (endPage > totalPage) {\r\n");
      out.write("	  endPage = totalPage;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	let startPage = endPage - (pageCount - 1); //화면에 보여질 첫번째 페이지 번호\r\n");
      out.write("	let next = Number(currentPage)+1;\r\n");
      out.write("	let prev = Number(currentPage)-1;\r\n");
      out.write("	\r\n");
      out.write("	let pageHtml = \"\";\r\n");
      out.write("	\r\n");
      out.write("	if (prev > 0) {\r\n");
      out.write("	  pageHtml += \"<li><a href='javascript:void(0)' id='prev'> 이전 </a></li>\";\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//페이징 번호 표시 \r\n");
      out.write("	for (var i = startPage; i <= endPage; i++) {\r\n");
      out.write("		if (currentPage == i) {\r\n");
      out.write("		  pageHtml +=\r\n");
      out.write("		    '<li class=\"on\"><a href=\"javascript:void(0)\" id=\"' + i + '\">' + i + '</a></li>';\r\n");
      out.write("		} else {\r\n");
      out.write("		  pageHtml += \"<li><a href='javascript:void(0)' id='\" + i + \"'>\" + i + \"</a></li>\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if (next <= totalPage) {\r\n");
      out.write("	  pageHtml += '<li><a href=\"javascript:void(0);\" id=\"next\"> 다음 </a></li>';\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$(\"#pagingul\").html(pageHtml);\r\n");
      out.write("	let displayCount = \"\";\r\n");
      out.write("	displayCount = \"현재 1 - \" + totalPage + \" 페이지 / \" + totalData + \"건\";\r\n");
      out.write("	$(\"#displayCount\").text(displayCount);\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	 //페이징 번호 클릭 이벤트 \r\n");
      out.write("	$(\"#pagingul li a\").click(function () {\r\n");
      out.write("		let $id = $(this).attr(\"id\");\r\n");
      out.write("		selectedPage = $(this).text();\r\n");
      out.write("		\r\n");
      out.write("		if ($id == \"next\") selectedPage = next;\r\n");
      out.write("		if ($id == \"prev\") selectedPage = prev;\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//전역변수에 선택한 페이지 번호를 담는다...\r\n");
      out.write("		globalCurrentPage = selectedPage;\r\n");
      out.write("		ajaxFnc();\r\n");
      out.write("	});\r\n");
      out.write("	  \r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/front/LOGO.png\" alt=\"로고이미지\" title=\"로고이미지\" id=\"logo\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <hr class=\"hrFirst\">\r\n");
      out.write("            <div class=\"divLeft\">\r\n");
      out.write("                <span id=\"spnNotice\">공지사항</span>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"divRight\">\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            <form name=\"frm\">\r\n");
      out.write("	            <select name=\"notice_condition\" id=\"selCondition\">\r\n");
      out.write("					<option value=\"title\">제목</option>\r\n");
      out.write("					<option value=\"content\">내용</option>\r\n");
      out.write("    			</select>\r\n");
      out.write("                <input type=\"text\" name=\"notice_search\" id=\"iptSearch\">\r\n");
      out.write("                <button id=\"btnSearch\" type=\"button\" onclick=\"btnSFnc()\">검색</button>\r\n");
      out.write("             </form>\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("				<br>\r\n");
      out.write("            <hr class=\"hrFirst\">\r\n");
      out.write("            <button type=\"button\" onclick=\"addNotice()\">공지사항 등록</button>\r\n");
      out.write("            <span id=\"displayCount\"></span>\r\n");
      out.write("            <table>\r\n");
      out.write("	            <thead>\r\n");
      out.write("	                <tr>\r\n");
      out.write("	                    <th style=\"width:10%\">글번호</th> <th style=\"width:75%\">제목</th> <th style=\"width:10%\">등록일</th>\r\n");
      out.write("	                </tr>\r\n");
      out.write("	            </thead>\r\n");
      out.write("	            <tbody id=\"dataTableBody\"></tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("	<ul id=\"pagingul\"></ul>\r\n");
      out.write("            \r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
